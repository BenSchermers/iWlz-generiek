openapi: 3.0.1
info:
  title: iWlz netwerkpunt functies
  description: OpenAPI Koppelvlak specificatie tbv generieke netwerkpunt functies.
  termsOfService: 'https://github.com/OAI/OpenAPI-Specification/blob/master/LICENSE'
  contact:
    name: "iStandaarden"
    url: "https://istandaarden.nl"
    email: info@istandaarden.nl
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: '0.1.0'
externalDocs:
  description: Find out more about OpenAPI
  url: 'https://www.openapis.org'
servers:
  - url: 'https://www.mijnnetwerkpunt.nl'
tags:
  - name: iWlz
    description: 'Alles over iWlz'
    externalDocs:
      description: Link naar iStandaarden
      url: 'https://informatiemodel.istandaarden.nl/'
  - name: netwerkpunt
    description: koppelvlak specificaties van Netwerkpunt naar buiten
    externalDocs:
      description: todo
      url: 'todo'
  - name: netwerkpunt_intern
    description: koppelvlak specificaties van Netwerkpunt naar backoffice (intern)
    externalDocs:
      description: todo
      url: 'todo'
paths:
  /netwerkpunt/{abonnementID}:
    delete:
      tags:
        - netwerkpunt
      summary: Verwijder een abonnement
      description: 'Operatie voor het verwijderen van een eerder geplaatst abonnement'
      operationId: deleteAbonnement
      parameters:
        - in: header
          name: X-orgKey
          description: Uniek ID van de organisatie binnen het netwerk
          schema:
            type: integer
            format: int32
          required: true
        - in: path
          name: abonnementID
          description: Id van het abonnement dat verwijderd dient te worden
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Abonnement verwijderd
        '404':
          description: abonnementID niet gevonden 
  /netwerkpunt/abonnementEntiteit:
      post:
        tags:
          - netwerkpunt
        summary: Abonneren op een specifiek entiteit
        operationId: postAbonnementEntiteit
        parameters:
        - in: header
          name: X-orgKey
          description: Uniek ID van de organisatie binnen het netwerk
          schema:
            type: integer
            format: int32
          required: true
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  entiteit:
                    description: naam van entiteit # of entiteitID?
                    type: string
                  eventType:
                    description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
                    type: string
                    enum: ["all","create", "update"]
                  organisatieId:
                    description: identificatie van de organisatie
                    type: string
                  organisatieIdType:
                    description: type identificatie van de organisatie
                    type: string
                required:
                  - entiteit
                  - event
                  - organisatieId
                  - organisatieIdType
        callbacks:   # Callback definition
          notificatie:   # Event name
            '{abonneeEndpoint/notificatie}':   # The callback URL for delivering notifications
              post:
                parameters:
                - in: header
                  name: X-orgKey
                  description: Uniek ID van de organisatie binnen het netwerk
                  schema:
                    type: integer
                    format: int32
                  required: true
                requestBody:   # Contents of the callback message
                  required: true
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          timestamp:
                              type: string
                              format: date-time
                          abonnementId:
                            type: string
                            format: uuid
                          eventType:
                            type: string
                            enum: ["create", "update"]
                          entiteitID:
                            type: string
                        required:
                          - timestamp
                          - abonnementId
                          - eventType
                          - message
                responses:   # Expected responses to the callback message
                  '200':
                    description: Your server returns this code if it accepts the callback
        responses:
          '201':
            description: Abonnement aangemaakt
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    abonnementId:
                      type: string
                      format: uuid
          '400':
            description: Ongeldig Entiteit - Abonnement niet aangemaakt
            content: {}
  /netwerkpunt/raadpleegdataEntiteit:
        get:
          tags:
            - netwerkpunt
          summary: BRaadplegen data entiteit bij andere netwerkpartijen
          operationId: getDataAbonnementEntiteit
          parameters:
          - in: header
            name: X-orgKey
            description: Uniek ID van de organisatie binnen het netwerk
            schema:
              type: integer
              format: int32
            required: true
          - in: header
            name: abonnementId
            description: abonnementID
            schema:
              type: string
              format: uuid
            required: true
          # requestBody:
          #   required: true
          #   content:
          #     application/json:
          #       schema:
          #         type: object
          #         properties:
          #           abonnementId:
          #             description: abonnementID
          #             type: string
          #             format: uuid
          #           # entiteit:
          #           #   description: naam van entiteit
          #           #   type: string
          #           # eventType:
          #           #   description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
          #           #   type: string
          #           #   enum: ["all","create", "update"]
          #           # organisatieId:
          #           #   description: identificatie van de organisatie
          #           #   type: string
          #           # organisatieIdType:
          #           #   description: type identificatie van de organisatie
          #           #   type: string
          #         required:
          #           - abonnementId
          #           # - entiteit
          #           # - event
          #           # - organisatieId
          #           # - organisatieIdType
          callbacks:   # Callback definition
            notificatie:   # Event name
              '{abonneeEndpoint/getData}':   # The callback URL for delivering notifications
                post:
                  parameters:
                  - in: header
                    name: X-orgKey
                    description: Uniek ID van de organisatie binnen het netwerk
                    schema:
                      type: integer
                      format: int32
                    required: true
                  requestBody:   # Contents of the callback message
                    required: true
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            timestamp:
                                type: string
                                format: date-time
                            abonnementId:
                              type: string
                              format: uuid
                            entiteitID:
                              type: string
                            entiteitData:
                              type: string
                          required:
                            - timestamp
                            - abonnementId
                            - entiteitID
                            - entiteitData
                  responses:   # Expected responses to the callback message
                    '200':
                      description: Your server returns this code if it accepts the callback
          responses:
            '201':
              description: verzoek ontvangen
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      abonnementId:
                        type: string
                        format: uuid
            '400':
              description: Ongeldig abonnementID - 
              content: {}
  /netwerkpunt_intern/eigenAbonnementen:
    get:
      tags:
        - netwerkpunt_intern
      summary: Raadplegen eigen actuele abonnementen bij andere netwerkpartijen
      operationId: getEigenAbonnementen
      parameters:
      # - in: header
      #   name: X-orgKey
      #   description: Uniek ID van de organisatie binnen het netwerk
      #   schema:
      #     type: integer
      #     format: int32
      #   required: true
      - in: header
        name: recordType
        description: record beschrijving
        schema:
          type: string
      - in: header
        name: eventType
        description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
        schema: 
          type: string
          enum: ["all","create", "update"]
      - in: header
        name: organisatieId
        description: identificatie van de organisatie waar abonnement is aangegaan
        schema:
          type: string
      - in: header
        name: organisatieIdType
        description: type identificatie van de organisatie
        schema:
          type: string
      - in: header
        name: aanmaakdatumBegin
        description: kleinste datum abonnement aangegaan
        schema:
          type: string
          format: date-time
      - in: header
        name: aanmaakdatumEind
        description: grootste datum abonnement aangegaan
        schema:
          type: string
          format: date-time
      # requestBody:
      #   required: false
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           recordType:
      #             description: record beschrijving
      #             type: string
      #           eventType:
      #             description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
      #             type: string
      #             enum: ["all","create", "update"]
      #           organisatieId:
      #             description: identificatie van de organisatie waar abonnement is aangegaan
      #             type: string
      #           organisatieIdType:
      #             description: type identificatie van de organisatie
      #             type: string
      #           aanmaakdatumbegin:
      #             description: kleinste datum abonnement aangegaan
      #             type: string
      #             format: date-time
      #           aanmaakdatumeind:
      #             description: grootste datum abonnement aangegaan
      #             type: string
      #             format: date-time
      #         required:
      #           - abonnementId
      #           - recordType
      #           - recordID
      #           - eventType
      #           - organisatieId
      #           - organisatieIdType
      #           - aanmaakdatum
      callbacks:   # Callback definition
        notificatie:   # Event name
          '{abonneeEndpoint/getData}':   # The callback URL for delivering notifications
            post:
              parameters:
              - in: header
                name: X-orgKey
                description: Uniek ID van de organisatie binnen het netwerk
                schema:
                  type: integer
                  format: int32
                required: true
              requestBody:   # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        timestamp:
                            type: string
                            format: date-time
                        abonnementId:
                          type: string
                          format: uuid
                        entiteitID:
                          type: string
                        entiteitData:
                          type: string
                      required:
                        - timestamp
                        - abonnementId
                        - entiteitID
                        - entiteitData
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
      responses:
        '201':
          description: verzoek ontvangen
          content:
            application/json:
              schema:
                type: object
                properties:
                  abonnementId:
                    description: abonnement identificatie
                    type: string
                    format: uuid
                  recordType:
                    description: record beschrijving
                    type: string
                  recordID:
                    description: record identificatie
                    type: string
                    format: uuid
                  eventType:
                    description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
                    type: string
                    enum: ["all","create", "update"]
                  organisatieId:
                    description: identificatie van de organisatie waar abonnement is aangegaan
                    type: string
                  organisatieIdType:
                    description: type identificatie van de organisatie
                    type: string
                  aanmaakdatum:
                    description: datum abonnement aangegaan
                    type: string
                    format: date-time
                required:
                  - abonnementId
                  - recordType
                  - recordID
                  - eventType
                  - organisatieId
                  - organisatieIdType
                  - aanmaakdatum

  # /netwerkpunt_intern/abonnees:
  # /netwerkpunt_intern/zendNotificatie: