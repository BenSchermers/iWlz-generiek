openapi: 3.0.1
info:
  title: iWlz netwerkpunt functies
  description: OpenAPI Koppelvlak specificatie tbv generieke netwerkfunctionaliteit.
  termsOfService: 'https://github.com/OAI/OpenAPI-Specification/blob/master/LICENSE'
  contact:
    name: "iStandaarden"
    url: "https://istandaarden.nl"
    email: info@istandaarden.nl
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: '0.1.0'
externalDocs:
  description: Find out more about OpenAPI
  url: 'https://www.openapis.org'
servers:
  - url: 'https://www.mijnnetwerkpunt.nl/abonnementen/'
  - url: 'https://www.mijnnetwerkpunt.nl/intern/abonnementen/'
tags:
  - name: iWlz
    description: 'Alles over iWlz'
    externalDocs:
      description: Link naar iStandaarden
      url: 'https://informatiemodel.istandaarden.nl/'
  - name: abonnementen
    description: Beschikbare abonnementen
    externalDocs:
      description: Link naar iStandaarden
      url: 'https://www.istandaarden.nl/istandaarden/iwlz/'
  - name: "iWlz codelijsten"
    description: ""
    externalDocs:
      description: "Codelijsten bij iWlz 2.2"
      url: "https://www.istandaarden.nl/ibieb/codelijsten-iwlz-221"
paths:
  /abonnementen/{abonnementID}:
    delete:
      tags:
        - abonnementen
      summary: Verwijder een abonnement
      description: 'Operatie voor het verwijderen van een eerder geplaatst abonnement'
      operationId: deleteAbonnement
      parameters:
        - in: header
          name: X-orgKey
          description: Uniek ID van de organisatie binnen het netwerk
          schema:
            type: integer
            format: int32
          required: true
        - in: path
          name: abonnementID
          description: Id van het abonnement dat verwijderd dient te worden
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Abonnement verwijderd
        '404':
          description: abonnementID niet gevonden 
  /abonnementen/organisatie:
    post:
      tags:
        - abonnementen
      summary: Abonneren op entiteit van een specifieke organisatie
      operationId: postAbonnementOrganisatie
      parameters:
        - in: header
          name: X-orgKey
          description: Uniek ID van de organisatie binnen het netwerk
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entiteit:
                  type: string
                  enum: ["wlzindicatie","entiteitx"]
                eventType:
                  description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
                  type: string
                  enum: ["all","create", "update"]
                organisatieId:
                  description: identificatie van de organisatie
                  type: string
                organisatieIdType:
                  description: type identificatie van de organisatie
                  type: string
                  enum: ["UZOVI"]
              required:
                - entiteit
                - event
                - organisatieId
                - organisatieIdType
      callbacks:   # Callback definition
        notificatie:   # Event name
          '{abonneeEndpoint/notificatie}':   # The callback URL for delivering notifications
              post:
                parameters:
                - in: header
                  name: X-orgKey
                  description: Uniek ID van de organisatie binnen het netwerk
                  schema:
                    type: integer
                    format: int32
                  required: true
                requestBody:   # Contents of the callback message
                  required: true
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                            timestamp:
                                type: string
                                format: date-time
                            abonnementId:
                              type: string
                              format: uuid
                            eventType:
                              type: string
                              enum: ["create", "update"]
                            entiteitID:
                              type: string
                        required:
                          - timestamp
                          - abonnementId
                          - eventType
                          - message
                responses:   # Expected responses to the callback message
                  '200':
                    description: Your server returns this code if it accepts the callback
      responses:
        '201':
          description: Abonnement aangemaakt
          content:
            application/json:
              schema:
                type: object
                properties:
                  abonnementId:
                    type: string
                    format: uuid
  /abonnementen/persoon:
      post:
        tags:
          - abonnementen
        summary: Abonneren op gegevens voor een specifiek persoon
        operationId: postAbonnementPersoon
        parameters:
        - in: header
          name: X-orgKey
          description: Uniek ID van de organisatie binnen het netwerk
          schema:
            type: integer
            format: int32
          required: true
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  entiteit:
                    type: string
                    enum: ["wlzindicatie"]
                  eventType:
                    description: specificatie voor welke gebeurtenissen er een abonnement wordt afgesloten. all = alle gebeurtenissen / create = alleen aanmaken / update = alleen wijzigingen
                    type: string
                    enum: ["all","create", "update"]
                  persoonId:
                    description: identificatie persoon
                    type: string
                  persoonIdType:
                    description: type identificatie persoon
                    type: string
                    enum: ["BSN"]
                required:
                  - event
                  - organisatieId
                  - persoonIdType
        callbacks:   # Callback definition
          notificatie:   # Event name
            '{abonneeEndpoint/notificatie}':   # The callback URL for delivering notifications
              post:
                parameters:
                - in: header
                  name: X-orgKey
                  description: Uniek ID van de organisatie binnen het netwerk
                  schema:
                    type: integer
                    format: int32
                  required: true
                requestBody:   # Contents of the callback message
                  required: true
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          timestamp:
                              type: string
                              format: date-time
                          abonnementId:
                            type: string
                            format: uuid
                          eventType:
                            type: string
                            enum: ["create", "update"]
                          entiteitID:
                            type: string
                        required:
                          - timestamp
                          - abonnementId
                          - eventType
                          - message
                responses:   # Expected responses to the callback message
                  '200':
                    description: Your server returns this code if it accepts the callback
        responses:
          '201':
            description: Abonnement aangemaakt
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    abonnementId:
                      type: string
                      format: uuid
          '400':
            description: Ongeldig BSN - Abonnement niet aangemaakt
            content: {}
